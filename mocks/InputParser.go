// Code generated by mockery v2.53.0. DO NOT EDIT.

package mocks

import mock "github.com/stretchr/testify/mock"

// InputParser is an autogenerated mock type for the InputParser type
type InputParser struct {
	mock.Mock
}

// Parse provides a mock function with given fields: input
func (_m *InputParser) Parse(input interface{}) error {
	ret := _m.Called(input)

	if len(ret) == 0 {
		panic("no return value specified for Parse")
	}

	var r0 error
	if rf, ok := ret.Get(0).(func(interface{}) error); ok {
		r0 = rf(input)
	} else {
		r0 = ret.Error(0)
	}

	return r0
}

// NewInputParser creates a new instance of InputParser. It also registers a testing interface on the mock and a cleanup function to assert the mocks expectations.
// The first argument is typically a *testing.T value.
func NewInputParser(t interface {
	mock.TestingT
	Cleanup(func())
}) *InputParser {
	mock := &InputParser{}
	mock.Mock.Test(t)

	t.Cleanup(func() { mock.AssertExpectations(t) })

	return mock
}
